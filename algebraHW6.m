%%  Задача 1 
% Напишите скрипт, переставляющий элементы вектора в обратном  
% порядке и записывающий результат в новый вектор.

a = input("Введите вектор: ");
flip(a)

%% Задача 2 
% Напишите скрипт, выделяющий из вектора 2 новых вектора,
% содержащие чётные (первый вектор) и нечётные (второй)      
% элементы исходного вектора. 

a = input("Введите вектор: ");
disp(a(mod(a, 2) ~= 0))
disp(a(mod(a, 2) == 0))

%% Задача 3 
% Создайте скрипт, находящий сумму отрицательных элементов вектора.

a = input("Введите вектор: ");
sum(a(a < 0))

%% Задача 4 
% Создайте скрипт, заменяющий элементы вектора, 
% отличающиеся от среднего геометрического его элементов более, 
% чем на 30%, на это среднее геометрическое.

a = input("Введите вектор: ");
g = geomean(a);
a(abs(a / g) > 30) = g;
disp(a);

%% Задача 5 
% Напишите скрипт, заменяющий все минимальные по значению
% элементы вектора максимальным значением его элементов.

a = input("Введите вектор: ");
ma = max(a);
mi = min(a);
a(a == mi) = ma;
disp(a);

%% Задача 6 
% Разработайте скрипт, ищущий и выводящий число положительных, 
% нулевых и отрицательных элементов входной матрицы.

a = input("Введите вектор: ");
disp(length(a(a > 0)));
disp(length(a(a == 0)));
disp(length(a(a < 0)));

%% Задача 7 
% Решите систему уравнений 2x1+3x2+3x3=8; 4x1+2x2+3x3=7; 6x1+5x2+6x3=7 
% методом x=A\b. Затем найдите число обусловленности матрицы
% (функция cond(A)), убедитесь в неправильности найденного решения 
% (сделайте проверку) и решите систему методом Гаусса. 

A = [2 3 3; 4 2 3; 6 5 6];
b = [8; 7; 7];
x = A \ b;
disp(x);
c = cond(A);
disp(c);
fl = 0;
for i = 1:3
    if A(i, 1) * x(1) + A(i, 2) * x(2) + A(i, 3) * x(3) ~= b(i)
        fl = 1;
    end 
end
if fl == 1
    disp("Not correct");
end
rref([A, b])

%% Задача 8 
% Дана табличная функция y(t)=a*e^(-t)+b*t: t=[0 0.1 0.2 0.3 0.4 0.5],
% y=[4.25 3.95 3.64 3.41 3.21 3.04] 
% (т.е. переопределённая система 6 уравнений для 2 неизвестных: a и b). 
% Решите эту систему с помощью \, постройте графики функции:
% по точкам y(t) и линией (fplot) согласно найденным a и b.  

t = [0; 0.1; 0.2; 0.3; 0.4; 0.5];
y = [4.25; 3.95; 3.64; 3.41; 3.21; 3.04];
sol = [exp(-t) t] \ y;
a = sol(1);
b = sol(2);
figure; hold on; grid on;
plot(t, y);
fplot(@(t) sol(1).*exp(-t) + sol(2).* t, [0 0.5]);
hold off;

%% Задача 9 
% Решите недоопределённую систему уравнений x1+2x2+3x3=2; 3x1+4x2+5x3=2 (\).
% Проверьте решение, умножив матрицу системы (А) на него.

A = [1 2 3; 3 4 5];
b = [2; 2];
x = A \ b;
disp(x);
disp(A * x);

%% Задача 10 
% Решите систему линейных уравнений 2x1+3x2+3x3=8;
% -2x1-3x2-3x3=7 с помощью функции linsolve.

A = [2 3 3; -2 -3 3];
b = [8; 7];
x = linsolve(A, b);
disp(x);

%% Задача 11 
% Решите систему из п.10 с помощью QR-разложения

A = [2 3 3; -2 -3 3];
b = [8; 7];
[q, r] = qr(A);
disp((r)' * (q)' * b);

%% Задача 12
% Вычислите все собственные векторы и числа матрицы A [2 4 5; 3 6 7; 8 5 2]. 
% Выведите их по очереди, записав в отдельные векторы и переменные. 
% Проверьте, правильно ли найден первый собственный вектор и соответствующее 
% ему собственное число.

A = [2 4 5; 3 6 7; 8 5 2];
[x, y] = eig(A);
for i = 1:length(x)
    ai = x(:, i);
    disp(ai);
end
for i = 1:length(y)
    bi = y(i, i);
    disp(bi);
end

disp(eq(A * x(:, 1), y(1, 1) * x(:, 1)));